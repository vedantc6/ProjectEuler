# Solution to the archived problems of Project Euler

# Problem 1 : Multiples of 3 and 5 
# If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
# Find the sum of all the multiples of 3 or 5 below 1000.

def mul_3_5_sum(arr):
	total = 0
	for i in arr:
		if (i % 3 == 0) and (i % 5 == 0):
			total += i
		elif (i % 3 == 0):
			total += i
		elif (i % 5 == 0):
			total += i
		else:
			pass

	return total

print ("Solution to Problem 1 is {} ".format(mul_3_5_sum(range(0,1000))))

# Problem 2 : Even Fibonacci numbers
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def even_fibonacci(arr):
	x = arr
	i = total = 0
	while (x[len(x)-1] < 4000000):
		x.append(x[i]+x[i+1])
		i += 1
	x.pop()

	for j in x:
		if j % 2 == 0:
			total += j
		else:
			pass

	return total

print ("Solution to Problem 2 is {} ".format(even_fibonacci([1,2])))

